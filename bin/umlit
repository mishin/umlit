#!/usr/bin/env ruby

require "thor"
require "umlit"
require "rake"

# UmlitCLI implements the command line interface for the diagramming tool
#
# the render() method takes in a number of files and for each file:
#    
class UmlitCLI < Thor
  default_command :render

  desc "render file(s)", "Render the file(s)"
  option :verbose, type: :boolean, default: false, aliases: %w(v)
  option :output_directory, aliases: %w(d)
  option :outfile, aliases: %w(o)
  def render(files)
    files = Array(files)
    files.each do |f|
      config_options = options.dup
      config_options[:input_file] = f
      config = Umlit::Config.new(config_options)

      puts "Rendering #{f} with options: #{options.inspect}" if config.verbose

      # TODO: Use a factory class here to select the appropriate diagram class
      case File.extname(f)
      when ".xsd"
        Umlit::XsdClassDiagram.create(f, outfile)
      when ".wsd"
        Umlit::SequenceDiagram.create(f, outfile)
      when ".dot"
        Umlit::GraphvizDiagram.create(f, outfile)
      when ".svg"
        Umlit::FixSvgDiagram.create(f, outfile)
      end
    end
  end
end

UmlitCLI.start(ARGV)
